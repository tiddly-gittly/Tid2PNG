"use strict"; var __create = Object.create, __defProp = Object.defineProperty, __getOwnPropDesc = Object.getOwnPropertyDescriptor, __getOwnPropNames = Object.getOwnPropertyNames, __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty, __copyProps = (t, r, o, n) => { if (r && "object" == typeof r || "function" == typeof r) for (let e of __getOwnPropNames(r)) __hasOwnProp.call(t, e) || e === o || __defProp(t, e, { get: () => r[e], enumerable: !(n = __getOwnPropDesc(r, e)) || n.enumerable }); return t }, __toESM = (e, t, r) => (r = null != e ? __create(__getProtoOf(e)) : {}, __copyProps(!t && e && e.__esModule ? r : __defProp(r, "default", { value: e, enumerable: !0 }), e)), import_widget = require("$:/core/modules/widgets/widget.js"), import_html2canvas_min = __toESM(require("$:/plugins/FSpark/TiddlerScreenshot/html2canvas.min.js")), TScreenshotWidget = class extends import_widget.widget { refresh(e) { return !1 } render(e, t) { console.log(import_html2canvas_min["default"]), this.parentDomNode = e, this.execute(), this.renderChildren(e, t) } invokeAction(e, t) { var r = e.domNode.closest("[role='article']"); r && (0, import_html2canvas_min["default"])(r).then(e => { e.toBlob(e => { var t = URL.createObjectURL(e), r = document.createElement("a"); r.href = t, r.download = this.getVariable("currentTiddler") + ".png", r.click(), window.URL.revokeObjectURL(t) }) }) } }; exports.tiddlerscreenshot = TScreenshotWidget;